import { io, Socket } from 'socket.io-client';
import React from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import Canvas, { PaintCoords } from '../../components/Canvas';
import styles from '../../styles/Game.module.scss';

type MessageChat = {
  name: string;
  text: string;
};

const Game: NextPage = () => {
  const socketRef = React.useRef<Socket>();
  const canvasCtxRef = React.useRef<CanvasRenderingContext2D>();
  const [messages, setMessages] = React.useState<MessageChat[]>([]);
  const [inputValue, setInputValue] = React.useState<string>('');
  React.useEffect(() => {
    socketRef.current = io('http://localhost:4000/');
    socketRef.current.on('repaint', ({ x, y, dx, dy }) => {
      if (canvasCtxRef.current) {
        canvasCtxRef.current.beginPath();
        canvasCtxRef.current.moveTo(x, y);
        canvasCtxRef.current.lineTo(x - dx, y - dy);
        canvasCtxRef.current.stroke();
        canvasCtxRef.current.closePath();
      }
    });
    socketRef.current.on('clear_canvas', () => {
      canvasCtxRef.current?.clearRect(0, 0, 600, 600);
    });
    socketRef.current.on('receive_message', (data) => {
      setMessages((prev) => [...prev, data]);
    });

    return () => {
      if (socketRef.current) {
        socketRef.current?.disconnect();
      }
    };
  }, []);

  const onPaint = (data: PaintCoords) => {
    if (socketRef.current) {
      socketRef.current.emit('paint', data);
    }
  };
  const onClear = () => {
    if (socketRef.current) {
      socketRef.current.emit('clear');
    }
  };

  const onClickSendMessage = () => {
    if (socketRef.current) {
      socketRef.current.emit('send-message', {
        name: 'Vasya',
        text: inputValue,
      });
    }
  };

  return (
    <div>
      <Head>
        <title>Game</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.game}>
        <div className={styles.chat}>
          <div className={styles.chatTitle}>Чат</div>
          <div className={styles.chatMessage}>
            {messages.map((obj, index) => (
              <div key={index} className={styles.chatItem}>
                <b>{obj.name}</b>
                <div>{obj.text}</div>
              </div>
            ))}
          </div>
          <div className={styles.chatInput}>
            <input
              value={inputValue}
              onChange={(e) => setInputValue(e.target.value)}
              type="text"></input>
            <button onClick={() => onClickSendMessage()}>send</button>
          </div>
        </div>
        <div className={styles.canvas}>
          <Canvas
            onPaint={onPaint}
            onInit={(canvasCtx) => (canvasCtxRef.current = canvasCtx)}
            onClear={onClear}
          />
        </div>
      </div>
    </div>
  );
};

export default Game;
